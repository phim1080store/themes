document.addEventListener('DOMContentLoaded',function(){let d=document,s=d.createElement('script')
s.src='https://https-phim1080-store.disqus.com/embed.js'
s.setAttribute('data-timestamp',+new Date());(d.head||d.body).appendChild(s)
requestAnimationFrame(()=>{new Swiper('.actor-roll',{slidesPerView:4,slidesPerGroup:4,spaceBetween:6,grid:{rows:2,fill:'row',},breakpoints:{1692:{slidesPerView:9,slidesPerGroup:9,spaceBetween:15},1330:{slidesPerView:9,slidesPerGroup:9,spaceBetween:15},993:{slidesPerView:7,slidesPerGroup:7,spaceBetween:10},560:{slidesPerView:5,slidesPerGroup:5,spaceBetween:5},},a11y:{enabled:!1},})})
document.querySelectorAll('.select-list').forEach((el)=>{el.addEventListener('click',function(e){e.preventDefault()
const serverId=this.getAttribute('data-id')
document.querySelectorAll('.list-content').forEach((c)=>c.classList.add('none'))
const target=document.getElementById('div-'+serverId)
if(target)target.classList.remove('none')
document.querySelectorAll('.select-list').forEach((sl)=>sl.classList.remove('active'))
this.classList.add('active')})})
document.querySelectorAll('.vod-playerUrl').forEach((el)=>{el.addEventListener('click',function(e){e.preventDefault()
const serverId=this.getAttribute('data-id')
document.querySelectorAll('.server-content').forEach((c)=>c.classList.add('none'))
const target=document.getElementById('episode-'+serverId)
if(target)target.classList.remove('none')
document.querySelectorAll('.vod-playerUrl').forEach((sl)=>sl.classList.remove('active'))
this.classList.add('active')})})
const desc=document.querySelector('.banner-content__desc')
const button=document.querySelector('.intl-album-more-btn')
if(desc&&button){if(desc.scrollHeight<=desc.clientHeight){button.style.display='none'}else{button.style.display='flex'}
button.addEventListener('click',function(){if(desc.classList.contains('line-clamp-3')){desc.classList.remove('line-clamp-3')
this.innerHTML='Ẩn bớt<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-up-icon lucide-chevron-up"><path d="m18 15-6-6-6 6"/></svg>'}else{desc.classList.add('line-clamp-3')
this.innerHTML='Hiển thị thêm<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-down-icon lucide-chevron-down"><path d="m6 9 6 6 6-6"/></svg>'}})}
document.querySelector('#share-btn')?.addEventListener('click',function(e){e.preventDefault()
let url=window.location.href
let title=document.title
if(navigator.share){navigator.share({title:title,url:url,})}else{let shareUrl=`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`
window.open(shareUrl,'_blank','width=600,height=400')}})
document.querySelector('#collect-btn')?.addEventListener('click',function(e){e.preventDefault()
data.href=window.location.protocol+'//'+window.location.host+'/phim/'+movie_slug
let collections=JSON.parse(localStorage['phim1080-collections']||'[]')
collections=collections.filter((item)=>item.id!==data.id)
collections.unshift(data)
collections=collections.slice(0,28)
localStorage['phim1080-collections']=JSON.stringify(collections)
Toastify({text:'Đã thêm vào bộ sưu tập',duration:3000,gravity:'bottom',position:'center',backgroundColor:'#0a0c0f',}).showToast()})
document.querySelector('#change-server-btn')?.addEventListener('click',function(e){e.preventDefault()
Promise.all([fetch('https://ophim1.com/v1/api/tim-kiem?keyword='+data.origin_name).then((res)=>res.json()).catch(()=>null),fetch('https://phim.nguonc.com/api/films/search?keyword='+data.origin_name).then((res)=>res.json()).catch(()=>null),]).then(async([ophimData,nguoncData])=>{let rendered=!1
if(ophimData?.data?.items){const found=ophimData.data.items.find((item)=>item.year==data.year&&(item.slug==data.slug||item.origin_name==data.origin_name))
if(found){try{const detailRes=await fetch('https://ophim1.com/v1/api/phim/'+found.slug)
const detailData=await detailRes.json()
const foundEp=detailData.data.item.episodes.find((ep)=>ep.server_name.split(' #')[0]===data.server_name)?.server_data.find((ep)=>ep.name==data.episode_name.replace('Tập ',''))
if(foundEp){renderPlayer('m3u8',foundEp.link_m3u8,data.id)
rendered=!0}}catch{}}}
if(!rendered&&nguoncData?.items){const found=nguoncData.items.find((item)=>(item.total_episodes>1?'series':'single')==data.type&&(item.slug==data.slug||item.original_name==data.origin_name))
if(found){try{const detailRes=await fetch('https://phim.nguonc.com/api/film/'+found.slug)
const detailData=await detailRes.json()
const foundEp=detailData.movie.episodes.find((ep)=>ep.server_name.split(' #')[0]===data.server_name)?.items.find((ep)=>ep.name==data.episode_name.replace('Tập ',''))
if(foundEp){renderPlayer('embed',foundEp.embed,data.id)
rendered=!0}}catch{}}}
if(!rendered){Toastify({text:'Không tìm thấy server backup',duration:3000,gravity:'bottom',position:'center',backgroundColor:'#0a0c0f',}).showToast()}})})
MicroModal.init()
let form=document.getElementById('report-form')
let textarea=document.getElementById('report-message')
let submitBtn=form.querySelector('button[type="submit"]')
form.addEventListener('submit',function(e){e.preventDefault()
let message=textarea.value.trim()
if(!message)return
submitBtn.disabled=!0
fetch('/phim/'+movie_slug+'/'+data.episode_id+'/report',{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify({message}),}).then(()=>{textarea.value=''}).finally(()=>{setTimeout(()=>{submitBtn.disabled=!1},3000)})
MicroModal.close('modal-report')
Toastify({text:'Gửi báo lỗi thành công',duration:3000,gravity:'bottom',position:'center',backgroundColor:'#0a0c0f',}).showToast()})
const toggleBtn=document.querySelector('.toggle-wrapper')
const tabListBox=document.querySelector('.player-list-box')
toggleBtn?.addEventListener('click',()=>{toggleBtn.classList.toggle('toggle-active')
tabListBox.classList.toggle('collapsed')
const lists=tabListBox.querySelectorAll('.anthology-list')
lists.forEach((list)=>{if(list.classList.contains('select-a')){list.classList.remove('select-a')
list.classList.add('select-b')}else if(list.classList.contains('select-b')){list.classList.remove('select-b')
list.classList.add('select-a')}})})})